import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import { useRouter } from 'next/router'
import VoteButton from '../../Components/VoteButton'
import { useState } from 'react'
import { setCookie, hasCookie } from 'cookies-next'
import useSWR from 'swr'

export default function QuestionPage() {
    const router = useRouter()
    const { id } = router.query
    const fetcher = (...args) => fetch(...args).then(res => res.json())
   
    const [disabled, setDisabled] = useState(false)
    
    //this uses SWR, and replaces the need to fetch data within useeffect
    const { data: voteOptions, error } = useSWR(`/api/question/${id}` , fetcher, { refreshInterval: 1000 })
    
    

    
    const HandleVote = (optionId) => {
        fetch('/api/option/vote/',
            {
                method: "POST",
                body: JSON.stringify({ id: optionId })
            })
            .then((res) => res.json())
            .then((data) => {

                console.log(data)
                //creates an expiration date of 1 day to plugin into setCookie
                let date = new Date();

                // add a day
                date.setDate(date.getDate() + 1);
                const options = {
                    expires: date
                }
                setCookie('voted/' + id, true, options)
            })
        //how to call fetch whenever you vote without rerendering options?
        //fetchOptions(optionId)

    }
    const HandleClick = (e) => {
        e.preventDefault()
        setDisabled(true)

        const voteData = e.currentTarget.value
        HandleVote(voteData)

    }
    //copies url to clipboard, share poll with friends 
    const copyToClipboard = () => {
        const el = document.createElement("input");
        el.value = window.location.href;
        document.body.appendChild(el);
        el.select();
        document.execCommand("copy");
        document.body.removeChild(el);

    }
    if (!voteOptions) {
        return (
            <div className={styles.container}>
                <Head>
                    <title>Donkpoll</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={styles.main}>
                    <div className={styles.grid}>

                        <h1 className={styles.title}>
                           Loading...
                        </h1>





                    </div>


                </main>

                <footer className={styles.footer}>
                    <a
                        href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        Powered by{' '}
                        <span className={styles.logo}>
                            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                        </span>
                    </a>
                </footer>
            </div>
        )
    }
    if (error) {
        return (
            <div className={styles.container}>
                <Head>
                    <title>Donkpoll</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className={styles.main}>
                    <div className={styles.grid}>

                        <h1 className={styles.title}>
                           Failed to load question.
                        </h1>





                    </div>


                </main>

                <footer className={styles.footer}>
                    <a
                        href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        Powered by{' '}
                        <span className={styles.logo}>
                            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                        </span>
                    </a>
                </footer>
            </div>
        )
    }
    return (
        <div className={styles.container}>
            <Head>
                <title>Donkpoll</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <div className={styles.grid}>
                    <button className=" bg-slate-500 hover:bg-slate-400 disabled:bg-slate-300 text-white rounded-lg p-3 m-1" onClick={copyToClipboard}>Share</button>

                    <h1 className={styles.title}>
                        {voteOptions.prompt}
                    </h1>

                    {voteOptions.options?.map(item => {
                        return <VoteButton likes={item.likes} key={item.id} value={item.id} prompt={item.title} clickInstruction={HandleClick} disabled={hasCookie('voted/' + id) || disabled} />
                    
                    })}



                </div>


            </main>

            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
                        <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                    </span>
                </a>
            </footer>
        </div>
    )
}
